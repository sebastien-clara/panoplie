declare name "cabinetMarshallDamienTreble";
declare description "Generated by tools/physicalModeling/ir2dsp.py";

import("stdfaust.lib");

pi = 4*atan(1.0);
nModes = 44;

modeFrequencies=(105.0,630.0,787.5,997.5,1207.5,1575.0,1785.0,1890.0,2047.5,2310.0,2625.0,2835.0,3045.0,3255.0,3517.5,3727.5,4095.0,4252.5,4462.5,4620.0,4725.0,4935.0,5092.5,5565.0,5722.5,6562.5,6825.0,7245.0,7875.0,8032.5,8505.0,8662.5,8820.0,9082.5,9660.0,10185.0,10447.5,10710.0,11182.5,11707.5,11865.0,12075.0,12232.5,12390.0);
massEigenValues=(1.0,0.229230846243,0.292112455987,0.330710408992,0.207465469033,0.266067758911,0.271784738486,0.292383734617,0.437359762684,0.354020027846,0.300787329373,0.279034873814,0.296104365532,0.524994190351,0.350656948008,0.503690327875,0.450765853725,0.331046266848,0.249063235849,0.293323821755,0.285879792191,0.343005882467,0.392333238484,0.087048204078,0.073636791989,0.0949205518909,0.0842974801078,0.0501173874028,0.0363202521033,0.0333490437783,0.0267739680552,0.0266376975765,0.0315772165354,0.0224295197786,0.0417477209889,0.0300421672479,0.0220248167178,0.0298613345356,0.0312084124198,0.0121972920109,0.0118165947651,0.012459891424,0.0137822810557,0.0122026921349);
t60=(38.4917013318,9.62298409157,28.8687955849,38.4917013318,12.8306193404,4.27692534368,4.27692534368,5.02072482161,38.4917013318,23.0950521368,5.02072482161,4.27692534368,2.51040158375,28.8687955849,4.27692534368,19.2458898381,9.62298409157,2.56618654459,2.51040158375,2.51040158375,2.51040158375,2.62450718546,12.8306193404,1.04039248142,1.04039248142,10.4977937049,9.62298409157,5.49888162886,11.5475652409,9.62298409157,1.56054954815,1.56054954815,14.4344369648,0.264928969278,10.4977937049,3.39639802058,0.263719605766,6.07770302713,6.79271769558,0.253312714506,0.245769563552,19.2458898381,19.2458898381,38.4917013318);

modeFreqs=par(i,nModes,ba.take(i+1, modeFrequencies));
modeGains=par(i,nModes,ba.take(i+1, massEigenValues));
modeT60 = par(i,nModes,ba.take(i+1,t60));

cabinetMarshallDamienTreble=modalModel(nModes,modeFrequencies,modeT60,modeGains);

modalModel(n,modeFreqs,modeRes,modeGains) = _ <: par(i,n,gain(i)*pm.modeFilter(freqs(i),res(i))) :> _
with {
	freqs(i) = ba.take(i+1,modeFreqs);
	res(i) = ba.take(i+1,modeRes);
	gain(i) = ba.take(i+1,modeGains);
};


cab = cabinetMarshallDamienTreble;

wetdry = vslider("[2] amount[style:knob]",  1, 0, 1, 0.01);
dry = 1 - wetdry;

process = _ <: _*dry, (_*wetdry:cab) :> _;
